$color-primary-light : #7ed56f;
$color-primary-dark : #28b485;$grid-width : 114rem;
$gutter-vertical : 8rem; //Space btw row grids vertically
$gutter-horizontal : 6rem; //Space between grids horizontally
$color-white : #fff;
$color-black : #000;
$default-font-size : 1.6rem ;

@mixin clearFix {
    //::after specifies that after rendering
    //content should be compulsary and empty
    //we should mention clear property so this will clear both floats left and right
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

.section-features {
    padding: 20rem 0;
    background-image: linear-gradient(
        to right bottom , 
        rgba(white , 0.8),
        rgba(grey , 0.8)) ,
        url(../../img/nat-4.jpg);
        background-size: cover;
        margin-top: -10rem;

        transform: skewY(-7deg);

        //The below code is immediate first child selector
        & > * {
            transform: skewY(7deg);
        }
}

.row {
    max-width: $grid-width;
    margin: 0 auto;

    &:not(:last-child) {
        //All the rows get the marginbottom except the last row ..
        //.. so we used not pseudo selector
        margin-bottom: $gutter-vertical;
    }

    @include clearFix;

    //This below square brackets is attribute selector
    //^ this symbol allows us to select the class that starts with col-
    //$ this symbol selects the class that ends with something
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        //In order to use the sass variables we use syntax #{$variable-name}
        width: calc((100% - #{$gutter-horizontal})  / 2 ) ;  
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal} ) ;
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal} );
    }

    .col-3-of-4 {
        width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * (#{$gutter-horizontal}) );
    }

}

.feature-box {
    background-color: rgba($color-white , .8);
    font-size: 1.5rem;
    padding: 2.5rem;
    text-align: center;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba($color-black , .5);
    transition: transform .3s;

    &__icon {
        font-size: 6rem;
        margin-bottom: .5rem;
        display: inline-block;
        background-image: linear-gradient(to right , $color-primary-light , $color-primary-dark);
        -webkit-background-clip: text;
        color: transparent;
    }

    &:hover {
        transform: translateY(-2rem) scale(1.2);
    }
}

.heading-tertiary {
    font-size: $default-font-size;
    font-weight: 800;
    text-transform: uppercase;
    color: darkgreen;
}