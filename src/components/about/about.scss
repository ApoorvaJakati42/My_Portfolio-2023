$color-grey-light-1 : #f7f7f7 ;
$color-black : #000;
$color-primary : #55c57a;
$grid-width : 114rem;
$gutter-vertical : 8rem; //Space btw row grids vertically
$gutter-horizontal : 6rem; //Space between grids horizontally

.u-center-text { text-align: center !important;} 
//This is parent of h1 so h1 is inline-block and it is treated as text

.u-marginBottom-small { margin-bottom: 1.5rem !important;}
.u-marginBottom-medium { margin-bottom: 4rem !important;}
.u-marginBottom-big { margin-bottom: 8rem !important;}
//This is used to add margin separately to the h2 , h3 etc headings

.u-marginTop-big { margin-top: 8rem !important;}
.u-marginTop-huge { margin-top: 10rem !important;}

$default-font-size : 1.6rem ;

@mixin clearFix {
    //::after specifies that after rendering
    //content should be compulsary and empty
    //we should mention clear property so this will clear both floats left and right
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

.section-about {
    background-color: $color-grey-light-1;
    padding: 25rem 0;
    margin-top: -20vh;
}

.composition {
    position: relative; 
    //this is parent element . Based on this relative position the images with absolute
    //position the images are arranged on screen

    &__photo {
        width: 55%;
        box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);
        border-radius: 0;
        position: absolute;
        z-index : 10;
        transition : all 0.2s;
        outline-offset: 2rem;


        &--p1 {
            left: 0;
            top: -2rem;    
        }

        &--p2 {
            right: 0;
            top: 2rem;
        }

        &--p3 {
            left: 20%;
            top: 10rem;
        }

        &:hover {
            outline: 1.5rem solid $color-primary;
            transform: scale(1.2) translateY(-.5rem); 
            box-shadow: 0 2.5rem 4rem rgba($color-black, .5);
            z-index : 20;  
            
        }

    }

    &:hover &__photo:not(:hover) {
        transform: scale(0.95); 
        //here the other images that are not hovered will scale down
    }
    //composition:hover composition__photo:not(:hover) 

}

.row {
    max-width: $grid-width;
    margin: 0 auto;

    &:not(:last-child) {
        //All the rows get the marginbottom except the last row ..
        //.. so we used not pseudo selector
        margin-bottom: $gutter-vertical;
    }

    @include clearFix;

    //This below square brackets is attribute selector
    //^ this symbol allows us to select the class that starts with col-
    //$ this symbol selects the class that ends with something
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        //In order to use the sass variables we use syntax #{$variable-name}
        width: calc((100% - #{$gutter-horizontal})  / 2 ) ;  
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal} ) ;
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal} );
    }

    .col-3-of-4 {
        width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * (#{$gutter-horizontal}) );
    }

}

.paragraph {
    font-size: $default-font-size;
    
    &:not(:last-child) {
        margin-bottom: 3rem;
    }
}

.my-details {
    font-size: $default-font-size;
    &:not(:last-child) {
        margin-bottom: 3rem;
    }
    text-align: center;
}

.heading-tertiary {
    font-size: $default-font-size;
    font-weight: 800;
    text-transform: uppercase;
    color: darkgreen;
}



